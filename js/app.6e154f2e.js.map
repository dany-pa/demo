{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/TrainingInteractiveMap/index.vue?add4","webpack:///./src/App.vue?2c47","webpack:///./src/components/TrainingInteractiveMap/index.vue?df17","webpack:///./src/features/InteractiveMap/const.ts","webpack:///./src/features/InteractiveMap/Host.ts","webpack:///./src/features/InteractiveMap/Segment.ts","webpack:///./src/features/InteractiveMap/Router.ts","webpack:///./src/features/InteractiveMap/InteractiveMap.ts","webpack:///./src/components/TrainingInteractiveMap/script.ts","webpack:///./src/components/TrainingInteractiveMap/script.ts?d6f9","webpack:///./src/components/TrainingInteractiveMap/index.vue","webpack:///./src/App.vue?9844","webpack:///./src/App.vue?6c26","webpack:///./src/App.vue","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticRenderFns","isStarted","_e","on","start","_v","staticClass","directives","rawName","expression","$event","$$selectedVal","Array","filter","target","options","selected","map","val","_value","segmentFrom","multiple","checkSegmentTo","segmentTo","isDisabled","ref","startAttackSegment","startAttackHost","resetAttack","_m","SEGMENT_HEIGHT","SEGMENT_WIDTH","SEGMENT_DEPTH","fontLoader","FontLoader","Host","segment","x","z","text","ip","model","Set","isShowLabel","label","undefined","createModal","classList","toggle","host","userData","hostGroup","Group","add","instance","materials","traverse","isMesh","material","clone","parent","labelContainerElem","document","querySelector","elem","cloneNode","remove","textContent","appendChild","position","set","isHost","load","font","geometry","TextGeometry","size","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelSegments","MeshLambertMaterial","color","textMesh","Mesh","rotation","Math","PI","y","scale","multiplyScalar","modalGeometry","BoxGeometry","modalMaterial","MeshBasicMaterial","Color","modalMesh","modalGroup","sphereGeometry","SphereGeometry","sphereMaterial","sphere","addAnimateEvent","animateEvent","fn","eventId","args","interactiveMap","elementsForAnimated","delete","direction","removeAnimateEvent","ColladaLoader","MTLLoader","OBJLoader","Segment","connections","createText","id","segmentMaterial","MeshStandardMaterial","segmentMesh","castShadow","light","PointLight","segmentGroup","bbox","Box3","setFromObject","isSegment","boundingBox","side","DoubleSide","hostModel","perLine","stepX","startX","startZ","stepZ","lines","floor","TextureLoader","Router","plane","planeGroup","isRouter","attackColor","InteractiveMap","rendererSize","lightPositions","canvas","attackLines","Vector3","selectedObjects","objectsForOutline","raycaster","Raycaster","mouse","Vector2","Scene","background","createCamera","createWebGLRenderer","width","domElement","style","touchAction","addEventListener","event","onPointerMove","onPointerDown","createLight","createFloor","initPostProcessing","controls","OrbitControls","minZoom","maxZoom","maxPolarAngle","enablePan","render","router","to","routerX","routerZ","toX","toZ","connectionsCount","el","objWidth","getObjectByName","parameters","routerSize","getSize","verticalDirection","defaultLength","abs","upLine","ceil","leftLine","rightLine","linesToDraw","moveStep","toSize","line2Size","lineDataRight","lineDataUp","lineDataLeft","lineDataUp2","createLine","from","linesMeshes","forEach","line","depth","includes","lineMaterial","visible","animation","metalness","mesh","composer","EffectComposer","setSize","renderPass","RenderPass","addPass","outlinePass","OutlinePass","innerWidth","innerHeight","visibleEdgeColor","edgeThickness","edgeStrength","overlayMaterial","blending","CustomBlending","gammaCorrectionPass","ShaderPass","GammaCorrectionShader","isPrimary","clientX","clientY","checkIntersection","activeModal","toggleLabel","setFromCamera","intersects","intersectObject","hostConnectionMaterial","hostConnection","hostConnectionMesh","connectionGroup","connection","aspect","camera","OrthographicCamera","order","atan","sqrt","renderer","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setClearColor","outputEncoding","sRGBEncoding","shadowMap","enabled","type","PCFSoftShadowMap","AmbientLight","light3","DirectionalLight","light4","light5","DirectionalLightHelper","floorMaterial","hosts","tempV","updateWorldMatrix","getWorldPosition","project","clientWidth","clientHeight","transform","requestAnimationFrame","nameFrom","nameTo","reverse","find","animationCount","myLines","animationName","createAttackAnimation","Promise","res","rej","directionSign","attack","gltfLoad","GLTFLoader","TrainingInteractiveMap","attackSegmentLines","attackHostLines","segments","models","Internet1","path","Internet2","DMZ","DataCenter","OfficeUsers","ASU","tempFrom","hostName","modelNames","Internet","modelData","loadAsync","scene","rendererSizes","IM","preloadModels","routers","mapData","newSegment","createSegment","modelName","getModelForHost","objectModel","createHost","fromX","fromZ","newRouter","createRouter","connectRouterTo","fromInternetToRouter","then","fromRouterToDMZ","fromDMZToRouter","fromRouterToDataCenter","fromRouterToOfficeUsers","fromRouterToASU","fromDataCenterToRouter","fromOfficeUserToRouter","console","log","linesData","animateStep","lineData","curScale","toScale","curPosition","method","toPosition","segmentIndex","$refs","Vue","Component","component","App","components","config","productionTip","h","$mount"],"mappings":"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","file":"js/app.6e154f2e.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('TrainingInteractiveMap')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[(!_vm.isStarted)?_c('button',{on:{\"click\":_vm.start}},[_vm._v(\"START\")]):_vm._e(),_c('div',{staticClass:\"mapContainer\"},[_c('div',{staticClass:\"attack\"},[_c('div',{staticClass:\"logo\"}),_c('div',{staticClass:\"selectContainer\"},[_c('div',{staticClass:\"select\"},[_c('div',{staticClass:\"selectLabel\"},[_vm._v(\"Атака из сегмента:\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.segmentFrom),expression:\"segmentFrom\"}],attrs:{\"name\":\"segmentFrom\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.segmentFrom=$event.target.multiple ? $$selectedVal : $$selectedVal[0]},_vm.checkSegmentTo]}},[_c('option',{attrs:{\"value\":\"0\"}},[_vm._v(\"Internet\")]),_c('option',{attrs:{\"value\":\"1\"}},[_vm._v(\"DMZ\")]),_c('option',{attrs:{\"value\":\"2\"}},[_vm._v(\"Data Center\")]),_c('option',{attrs:{\"value\":\"3\"}},[_vm._v(\"Office users\")]),_c('option',{attrs:{\"value\":\"4\"}},[_vm._v(\"ASU\")])])]),_c('div',{staticClass:\"select\"},[_c('div',{staticClass:\"selectLabel\"},[_vm._v(\"в сегмент:\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.segmentTo),expression:\"segmentTo\"}],attrs:{\"name\":\"segmentFrom\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.segmentTo=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"0\",\"disabled\":_vm.isDisabled(1)}},[_vm._v(\"Internet\")]),_c('option',{attrs:{\"value\":\"1\",\"disabled\":_vm.isDisabled(2)}},[_vm._v(\"DMZ\")]),_c('option',{attrs:{\"value\":\"2\",\"disabled\":_vm.isDisabled(3)}},[_vm._v(\"Data Center\")]),_c('option',{attrs:{\"value\":\"3\",\"disabled\":_vm.isDisabled(4)}},[_vm._v(\"Office users\")]),_c('option',{attrs:{\"value\":\"4\",\"disabled\":_vm.isDisabled(5)}},[_vm._v(\"ASU\")])])])]),_c('button',{ref:\"startAttack\",staticClass:\"btn\",on:{\"click\":_vm.startAttackSegment}},[_vm._v(\"Начать атаку на сегмент\")]),_c('button',{ref:\"startAttack\",staticClass:\"btn\",on:{\"click\":_vm.startAttackHost}},[_vm._v(\"Начать атаку на хост\")]),_c('button',{ref:\"startAttack\",staticClass:\"btn-reset\",on:{\"click\":_vm.resetAttack}},[_c('div',{staticClass:\"clear ico\"}),_vm._v(\" Очистить карту \")])]),_c('canvas',{ref:\"canvas\",staticClass:\"canvas\"})]),_c('div',{attrs:{\"id\":\"labels\"}}),_vm._m(0)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hostInfo hostInfoTemplate\"},[_c('div',{staticClass:\"row\"},[_c('span',[_vm._v(\"Сегмент:\")]),_vm._v(\" \"),_c('span',{staticClass:\"segment\"})]),_c('div',{staticClass:\"row\"},[_c('span',[_vm._v(\"Хост:\")]),_vm._v(\" \"),_c('span',{staticClass:\"host\"})]),_c('div',{staticClass:\"row\"},[_c('span',[_vm._v(\"IP хоста:\")]),_vm._v(\" \"),_c('span',{staticClass:\"ip\"})]),_c('div',{staticClass:\"corner\"})])}]\n\nexport { render, staticRenderFns }","export const SEGMENT_HEIGHT = 4\r\nexport const SEGMENT_WIDTH = 4\r\nexport const SEGMENT_DEPTH = 0.1\r\nexport const HOST_WIDTH = 0.5\r\nexport const HOST_HEIGHT = 1\r\nexport const HOST_DEPTH = 0.5\r\n","import {\r\n    BoxGeometry,\r\n    Group,\r\n    Mesh,\r\n    MeshLambertMaterial,\r\n    MeshStandardMaterial,\r\n    MeshBasicMaterial,\r\n    Color,\r\n    SphereGeometry,\r\n    Texture,\r\n} from \"three\"\r\nimport { TextGeometry } from \"three/examples/jsm/geometries/TextGeometry\"\r\nimport { FontLoader } from \"three/examples/jsm/loaders/FontLoader\"\r\nimport { HOST_WIDTH, HOST_HEIGHT, HOST_DEPTH, SEGMENT_DEPTH } from \"./const\"\r\nimport { InteractiveMap } from \"./InteractiveMap\"\r\nimport { Segment } from \"./Segment\"\r\nconst fontLoader = new FontLoader()\r\n\r\nexport class Host {\r\n    #instance: Group\r\n    #segment: Segment\r\n    #model: any\r\n    #modal: Group\r\n    #name: string\r\n    #ip: string\r\n    #animateEvents: Set<string> = new Set()\r\n    #animateEventsCount: number = 0\r\n    isShowLabel: boolean = false\r\n    label: any = undefined\r\n\r\n    constructor(segment: Segment, x: number, z: number, text: string, ip: string, model: any) {\r\n        this.#name = text\r\n        this.#ip = ip\r\n        this.#model = model\r\n        this.#segment = segment\r\n        this.#modal = this.createModal()\r\n        this.#instance = this.create(text, x, z, model)\r\n        // this.createText(text)\r\n    }\r\n\r\n    toggleLabel() {\r\n        this.isShowLabel = !this.isShowLabel\r\n        this.label.classList.toggle(\"show\")\r\n    }\r\n\r\n    create(name: string, x: number, z: number, model: any): Group {\r\n        const host = model\r\n        host.name = \"host\"\r\n        host.userData.segment = this.#segment\r\n        host.userData.host = this\r\n\r\n        const hostGroup = new Group()\r\n        hostGroup.name = `hostGroup_${name}`\r\n        hostGroup.add(host)\r\n\r\n        this.#segment.instance.add(hostGroup)\r\n        let materials: any = []\r\n        hostGroup.traverse((object: any) => {\r\n            if (object.isMesh) {\r\n                object.material = object.material.clone()\r\n                materials.push(object.material)\r\n                object.userData.parent = hostGroup\r\n            }\r\n        })\r\n        const labelContainerElem = document.querySelector(\"#labels\")\r\n        const elem = document.querySelector(\".hostInfoTemplate\")?.cloneNode(true)\r\n        // @ts-ignore\r\n        elem!.classList.remove(\"hostInfoTemplate\")\r\n        // @ts-ignore\r\n        elem.querySelector(\".segment\").textContent = this.#segment.name\r\n        // @ts-ignore\r\n        elem.querySelector(\".host\").textContent = name\r\n        // @ts-ignore\r\n        elem.querySelector(\".ip\").textContent = this.ip\r\n        // elem!.textContent = name;\r\n        labelContainerElem!.appendChild(elem!)\r\n\r\n        hostGroup.position.set(x, 0, z)\r\n        hostGroup.userData = { isHost: true, segment: this.#segment, host: this, label: elem, materials }\r\n        this.label = elem\r\n\r\n        return hostGroup\r\n    }\r\n\r\n    createText(text: string): void {\r\n        fontLoader.load(\r\n            \"https://cdn.rawgit.com/mrdoob/three.js/master/examples/fonts/helvetiker_regular.typeface.json\",\r\n            (font: any) => {\r\n                const geometry = new TextGeometry(text, {\r\n                    font: font,\r\n                    size: 12,\r\n                    height: 5,\r\n                    curveSegments: 1,\r\n                    bevelEnabled: true,\r\n                    bevelThickness: 1,\r\n                    bevelSize: 1,\r\n                    bevelSegments: 1,\r\n                })\r\n\r\n                let material = new MeshLambertMaterial({\r\n                    color: 0xf3ffe2,\r\n                    name: \"text\",\r\n                })\r\n\r\n                const textMesh = new Mesh(geometry, material)\r\n                textMesh.name = \"hostText\"\r\n                textMesh.position.set(0.2, 0.4, 0)\r\n                textMesh.rotation.x = -Math.PI / 2\r\n                textMesh.rotation.y = Math.PI / 2\r\n                textMesh.scale.multiplyScalar(0.01)\r\n                this.#instance.add(textMesh)\r\n            }\r\n        )\r\n    }\r\n\r\n    createModal(): Group {\r\n        const modalGeometry = new BoxGeometry(4, 8, 0.1)\r\n        const modalMaterial = new MeshBasicMaterial({\r\n            color: new Color(0, 255, 0),\r\n        })\r\n        const modalMesh = new Mesh(modalGeometry, modalMaterial)\r\n        modalMesh.rotation.y = Math.PI / 2\r\n\r\n        const modalGroup = new Group()\r\n        modalGroup.add(modalMesh)\r\n\r\n        fontLoader.load(\r\n            \"https://cdn.rawgit.com/mrdoob/three.js/master/examples/fonts/helvetiker_regular.typeface.json\",\r\n            (font: any) => {\r\n                const geometry = new TextGeometry(\"text\", {\r\n                    font: font,\r\n                    size: 12,\r\n                    height: 5,\r\n                    curveSegments: 1,\r\n                    bevelEnabled: true,\r\n                    bevelThickness: 1,\r\n                    bevelSize: 1,\r\n                    bevelSegments: 1,\r\n                })\r\n\r\n                let material = new MeshLambertMaterial({\r\n                    color: 0x000000,\r\n                    name: \"text\",\r\n                })\r\n\r\n                const textMesh = new Mesh(geometry, material)\r\n                textMesh.position.set(0, 0, 0)\r\n                textMesh.rotation.x = -Math.PI / 2\r\n                textMesh.rotation.y = Math.PI / 2\r\n                textMesh.scale.multiplyScalar(0.01)\r\n            }\r\n        )\r\n\r\n        return modalGroup\r\n    }\r\n\r\n    generateEvent(): void {\r\n        const sphereGeometry = new SphereGeometry(0.1, 64, 32)\r\n        const sphereMaterial = new MeshBasicMaterial({\r\n            color: 0xffff00,\r\n            name: \"sphere\",\r\n        })\r\n        const sphere = new Mesh(sphereGeometry, sphereMaterial)\r\n        this.#instance.add(sphere)\r\n        this.addAnimateEvent(this.animateEvent, sphere)\r\n    }\r\n\r\n    addAnimateEvent(fn: (...args: any) => any, ...args: any[]): void {\r\n        const eventId = `host_${this.#name}_Event_${this.#animateEventsCount}`\r\n        this.#animateEventsCount += 1\r\n        this.#animateEvents.add(eventId)\r\n        this.interactiveMap.elementsForAnimated[eventId] = fn.bind(\r\n            this,\r\n            //@ts-ignore\r\n            eventId,\r\n            ...args\r\n        )()\r\n    }\r\n\r\n    removeAnimateEvent(eventId: string): void {\r\n        this.#animateEvents.delete(eventId)\r\n        delete this.interactiveMap.elementsForAnimated[eventId]\r\n    }\r\n\r\n    animateEvent(eventId: string, sphere: Mesh<SphereGeometry, MeshBasicMaterial>): () => void {\r\n        let direction = \"up\"\r\n        const host = this\r\n        return () => {\r\n            if (direction === \"up\") {\r\n                sphere.position.y += 0.1\r\n                if (sphere.position.y >= 0.7) {\r\n                    direction = \"down\"\r\n                }\r\n            } else if (direction === \"down\") {\r\n                sphere.position.y -= 0.01\r\n                if (sphere.position.y <= 0) {\r\n                    direction = \"up\"\r\n                    host.removeAnimateEvent(eventId)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get interactiveMap(): InteractiveMap {\r\n        return this.#segment.interactiveMap\r\n    }\r\n\r\n    get instance(): Group {\r\n        return this.#instance\r\n    }\r\n\r\n    get name(): string {\r\n        return this.#name\r\n    }\r\n\r\n    get ip(): string {\r\n        return this.#ip\r\n    }\r\n}\r\n","import {\r\n    Box3,\r\n    BoxGeometry,\r\n    Color,\r\n    DoubleSide,\r\n    Group,\r\n    Mesh,\r\n    MeshLambertMaterial,\r\n    MeshPhongMaterial,\r\n    MeshStandardMaterial,\r\n    PointLight,\r\n    Texture,\r\n} from \"three\"\r\nimport { TextGeometry } from \"three/examples/jsm/geometries/TextGeometry\"\r\nimport { ColladaLoader } from \"three/examples/jsm/loaders/ColladaLoader\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { FontLoader } from \"three/examples/jsm/loaders/FontLoader\"\r\nimport { SEGMENT_WIDTH, SEGMENT_HEIGHT, SEGMENT_DEPTH } from \"./const\"\r\nimport { Host } from \"./Host\"\r\nimport { InteractiveMap } from \"./InteractiveMap\"\r\nconst loader = new ColladaLoader()\r\nconst mtlLoad = new MTLLoader()\r\nconst objLoad = new OBJLoader()\r\n\r\nconst fontLoader = new FontLoader()\r\nexport type Connection = {\r\n    from: any\r\n    to: any\r\n    lines?: any\r\n}\r\n\r\nexport class Segment {\r\n    #id: string\r\n    #hosts: Host[] = []\r\n    // @ts-ignore\r\n    #textInstance: Mesh<TextGeometry, MeshLambertMaterial>\r\n    #instance: Group\r\n    #name: string\r\n    #interactiveMap: InteractiveMap\r\n    connections: Connection[] = []\r\n\r\n    constructor(text: string, x: number, z: number, interactiveMap: InteractiveMap, model?: any) {\r\n        this.#id = text\r\n        this.#name = text\r\n        this.#instance = this.create(text, x, z, model)\r\n        this.#interactiveMap = interactiveMap\r\n        this.createText(text)\r\n    }\r\n\r\n    create(id: string, x: number, z: number, model: any): Group {\r\n        const segmentMaterial = new MeshStandardMaterial({\r\n            name: `segment_${id}`,\r\n            color: new Color(\"#080808\"),\r\n        })\r\n        const segment = new BoxGeometry(SEGMENT_WIDTH, SEGMENT_HEIGHT, SEGMENT_DEPTH)\r\n        const segmentMesh = new Mesh(segment, segmentMaterial)\r\n        segmentMesh.rotation.x = -1.57\r\n        segmentMesh.castShadow = true\r\n        segmentMesh.name = \"mainMesh\"\r\n\r\n        const light = new PointLight(new Color(\"gray\"), 0.1, 0, 2)\r\n\r\n        const segmentGroup = new Group()\r\n\r\n        light.position.x -= 2\r\n        light.position.z -= 2\r\n        light.position.y = 3\r\n\r\n        segmentGroup.add(\r\n            segmentMesh\r\n            // light\r\n        )\r\n        segmentGroup.name = `segmentGroup_${id}`\r\n\r\n        segmentGroup.position.set(x, SEGMENT_DEPTH / 2, z)\r\n\r\n        const bbox = new Box3()\r\n        bbox.setFromObject(segmentGroup)\r\n\r\n        let materials: any = []\r\n        segmentGroup.traverse((object: any) => {\r\n            if (object.isMesh) materials.push(object.material)\r\n        })\r\n        segmentGroup.userData = { isSegment: true, boundingBox: bbox, materials }\r\n\r\n        return segmentGroup\r\n    }\r\n\r\n    createText(text: string): void {\r\n        fontLoader.load(\r\n            \"https://cdn.rawgit.com/mrdoob/three.js/master/examples/fonts/helvetiker_regular.typeface.json\",\r\n            (font) => {\r\n                const geometry = new TextGeometry(text, {\r\n                    font: font,\r\n                    size: 40,\r\n                    height: 4,\r\n                    curveSegments: 1,\r\n                    bevelEnabled: true,\r\n                    bevelThickness: 1,\r\n                    bevelSize: 1,\r\n                    bevelSegments: 5,\r\n                })\r\n\r\n                let material = new MeshLambertMaterial({\r\n                    color: 0xf3ffe2,\r\n                    name: \"text\",\r\n                    side: DoubleSide,\r\n                })\r\n\r\n                const textMesh = new Mesh(geometry, material)\r\n                textMesh.position.set(-1.8, 0.03, 1.8)\r\n                textMesh.rotation.x = -Math.PI / 2\r\n                textMesh.scale.multiplyScalar(0.01)\r\n\r\n                this.#instance.add(textMesh)\r\n                this.#textInstance = textMesh\r\n            }\r\n        )\r\n    }\r\n\r\n    createHost(text: string, ip: string, model: any): any {\r\n        const hostModel = model.clone()\r\n        hostModel.position.x = 0\r\n        hostModel.position.y = 0\r\n        hostModel.position.z = 0\r\n\r\n        const perLine = 4\r\n        const stepX = 1\r\n        const startX = -1.5\r\n\r\n        const startZ = -1.5\r\n        const stepZ = 1.2\r\n\r\n        const lines = Math.floor(this.#hosts.length / perLine)\r\n        const x = startX + (this.#hosts.length % perLine) * stepX\r\n        const z = startZ + lines * stepZ\r\n\r\n        const host = new Host(this, x, z, text, ip, hostModel)\r\n        this.#instance.add(host.instance)\r\n        // @ts-ignore\r\n        this.#hosts.push(host)\r\n        return host\r\n    }\r\n\r\n    get instance(): Group {\r\n        return this.#instance\r\n    }\r\n\r\n    get name(): string {\r\n        return this.#name\r\n    }\r\n\r\n    get interactiveMap(): InteractiveMap {\r\n        return this.#interactiveMap\r\n    }\r\n\r\n    get hosts(): Host[] {\r\n        return this.#hosts\r\n    }\r\n}\r\n","// @ts-ignore\r\nimport routerTexture from \"./textures/router.png\"\r\nimport {\r\n    DoubleSide,\r\n    Mesh,\r\n    Group,\r\n    BoxGeometry,\r\n    MeshStandardMaterial,\r\n    TextureLoader,\r\n    RepeatWrapping,\r\n    Vector2,\r\n    NearestFilter,\r\n    Box3,\r\n    Vector3,\r\n} from \"three\"\r\n\r\nconst textureLoader = new TextureLoader()\r\n\r\nexport class Router {\r\n    #id: string\r\n    #instance: Group\r\n\r\n    constructor(id: string, x: number, z: number, model: any) {\r\n        this.#id = id\r\n        this.#instance = this.create(x, z, id, model)\r\n    }\r\n\r\n    create(x: number, z: number, id: string, model: any): Group {\r\n        const plane = model.clone()\r\n\r\n        const planeGroup = new Group()\r\n        planeGroup.add(plane)\r\n        planeGroup.name = `routerGroup_${id}`\r\n        planeGroup.position.set(x, 0, z)\r\n        planeGroup.scale.set(2, 2, 2)\r\n\r\n        let materials: any = []\r\n        planeGroup.traverse((object: any) => {\r\n            if (object.isMesh) {\r\n                object.material = object.material.clone()\r\n                materials.push(object.material)\r\n            }\r\n        })\r\n\r\n        const bbox = new Box3()\r\n        bbox.setFromObject(planeGroup)\r\n\r\n        planeGroup.userData = { isRouter: true, boundingBox: bbox, materials }\r\n\r\n        return planeGroup\r\n    }\r\n\r\n    get instance(): Group {\r\n        return this.#instance\r\n    }\r\n}\r\n","//@ts-ignore\r\nimport bg from \"./textures/floor.png\"\r\n// import GUI from 'lil-gui';\r\nconst attackColor = new Color(\"#4e1a1a\")\r\ntype ElementsForAnimated = {\r\n    [key: string]: () => any\r\n}\r\n\r\ntype HostConnection = {\r\n    id: string\r\n    connection: Mesh<BoxGeometry, MeshBasicMaterial>\r\n    sphere: Mesh<SphereGeometry, MeshBasicMaterial>\r\n}\r\n\r\nexport type Size = {\r\n    width: number\r\n    height: number\r\n}\r\n\r\nexport type EdgeLine = {\r\n    direction?: \"right\" | \"left\" | \"down\" | \"up\"\r\n    size: number\r\n    x: number\r\n    y?: number\r\n    z: number\r\n    color?: ColorRepresentation | undefined\r\n    animation?: Animation\r\n    name?: string\r\n}\r\n\r\nexport type Animation = {\r\n    direction: \"x\" | \"y\" | \"z\"\r\n    toScale: number\r\n    toPosition: number\r\n    method: \"+\" | \"-\"\r\n}\r\n\r\nimport {\r\n    WebGLRenderer,\r\n    PCFSoftShadowMap,\r\n    Scene,\r\n    MeshBasicMaterial,\r\n    Mesh,\r\n    TextureLoader,\r\n    BoxGeometry,\r\n    SphereGeometry,\r\n    Group,\r\n    Vector3,\r\n    Vector2,\r\n    RepeatWrapping,\r\n    Color,\r\n    DirectionalLight,\r\n    OrthographicCamera,\r\n    NearestFilter,\r\n    MeshStandardMaterial,\r\n    Raycaster,\r\n    Object3D,\r\n    OffscreenCanvas,\r\n    ColorRepresentation,\r\n    Event,\r\n    PointLightHelper,\r\n    DirectionalLightHelper,\r\n    AmbientLight,\r\n    LoadingManager,\r\n    MeshPhongMaterial,\r\n    SpotLight,\r\n    PointLight,\r\n    sRGBEncoding,\r\n    Line,\r\n    BufferGeometry,\r\n    LineBasicMaterial,\r\n    CatmullRomCurve3,\r\n    SubtractiveBlending,\r\n    CustomBlending,\r\n} from \"three\"\r\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer.js\"\r\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass.js\"\r\nimport { ShaderPass } from \"three/examples/jsm/postprocessing/ShaderPass.js\"\r\nimport { OutlinePass } from \"three/examples/jsm/postprocessing/OutlinePass.js\"\r\nimport { FXAAShader } from \"three/examples/jsm/shaders/FXAAShader.js\"\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\"\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\"\r\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\"\r\nimport { GammaCorrectionShader } from \"three/examples/jsm/shaders/GammaCorrectionShader.js\"\r\nimport * as GeometryUtils from \"three/examples/jsm/utils/GeometryUtils.js\"\r\nimport { Line2 } from \"three/examples/jsm/lines/Line2.js\"\r\nimport { LineMaterial } from \"three/examples/jsm/lines/LineMaterial.js\"\r\nimport { LineGeometry } from \"three/examples/jsm/lines/LineGeometry.js\"\r\nimport { ColladaLoader } from \"three/examples/jsm/loaders/ColladaLoader.js\"\r\nconst mtlLoad = new MTLLoader()\r\nconst objLoad = new OBJLoader()\r\n\r\nimport { Segment, Connection } from \"./Segment\"\r\nimport { Router } from \"./Router\"\r\n\r\nconst textureLoader: TextureLoader = new TextureLoader()\r\n\r\nexport class InteractiveMap {\r\n    attackLines: any[] = []\r\n    canvas: any\r\n    #scene: Scene\r\n    #camera: OrthographicCamera\r\n    #renderer: WebGLRenderer\r\n    #light: DirectionalLight\r\n    #floorSize: Vector3 = new Vector3(90, 0.5, 90)\r\n    #segments: Segment[] = []\r\n    #routers: any[] = []\r\n    #hostsConnections: HostConnection[] = []\r\n    connections: Connection[] = []\r\n    outlinePass: OutlinePass | undefined\r\n    // #gui: GUI;\r\n    selectedObjects: any[] = []\r\n    objectsForOutline: any[] = []\r\n    raycaster: Raycaster = new Raycaster()\r\n    mouse: Vector2 = new Vector2()\r\n    composer: EffectComposer | undefined\r\n    activeModal: any\r\n    controls: OrbitControls\r\n    #elementsForAnimated: ElementsForAnimated = {}\r\n    model: any\r\n    rendererSize: any\r\n\r\n    constructor(rendererSize: Size, lightPositions: Vector3, canvas: HTMLCanvasElement | OffscreenCanvas) {\r\n        // this.#gui = new GUI();\r\n        this.#scene = new Scene()\r\n        this.#scene.background = new Color(0x999999)\r\n        this.canvas = canvas\r\n        this.rendererSize = rendererSize\r\n\r\n        this.#camera = this.createCamera()\r\n\r\n        this.#renderer = this.createWebGLRenderer(rendererSize.width, rendererSize.height, canvas)\r\n        this.#renderer.domElement.style.touchAction = \"none\"\r\n        this.#renderer.domElement.addEventListener(\"pointermove\", (event) => this.onPointerMove(event))\r\n        this.#renderer.domElement.addEventListener(\"pointerdown\", (event) => this.onPointerDown(event))\r\n\r\n        this.#light = this.createLight(lightPositions.x, lightPositions.y, lightPositions.z)\r\n\r\n        this.#scene.add(this.#camera)\r\n\r\n        this.createFloor()\r\n\r\n        this.initPostProcessing()\r\n\r\n        let controls = new OrbitControls(this.#camera, this.#renderer.domElement)\r\n        controls.minZoom = 1\r\n        controls.maxZoom = 7\r\n        controls.maxPolarAngle = (0.9 * Math.PI) / 2.2\r\n        controls.enablePan = true\r\n        this.controls = controls\r\n\r\n        this.render()\r\n    }\r\n\r\n    connectRouterTo(router: Group, to: Group) {\r\n        const routerX: number = router?.position.x || 0\r\n        const routerZ: number = router?.position.z || 0\r\n        const toX: number = to?.position.x || 0\r\n        const toZ: number = to?.position.z || 0\r\n\r\n        let connectionsCount =\r\n            this.connections.filter((el: any) => {\r\n                return el?.to.name === to.name\r\n            }).length + 1\r\n        connectionsCount = connectionsCount > 1 ? connectionsCount : 0\r\n        // @ts-ignore\r\n        const objWidth = router.getObjectByName(\"mainMesh\")?.geometry?.parameters?.width || 0\r\n        const routerSize = new Vector3()\r\n        router.userData.boundingBox.getSize(routerSize)\r\n\r\n        const defaultLength = Math.abs(routerX - toX)\r\n        const upLine = (length: number = defaultLength): EdgeLine => ({\r\n            x: routerX,\r\n            z: routerZ - Math.ceil(objWidth / 2) - length / 2,\r\n            direction: \"up\",\r\n            size: length,\r\n        })\r\n\r\n        const leftLine = (length: number = defaultLength): EdgeLine => ({\r\n            x: routerX - length / 2 - routerSize.x / 2,\r\n            z: routerZ,\r\n            direction: \"left\",\r\n            size: length,\r\n        })\r\n\r\n        const rightLine = (length: number = defaultLength): EdgeLine => ({\r\n            x: routerX + length / 2 - routerSize.x / 2,\r\n            z: routerZ,\r\n            direction: \"right\",\r\n            size: length,\r\n        })\r\n\r\n        let verticalDirection: string | undefined\r\n        if (routerX < toX) {\r\n            verticalDirection = \"right\"\r\n        } else if (routerX > toX) {\r\n            verticalDirection = \"left\"\r\n        }\r\n\r\n        let horizontalDirection: string | undefined\r\n        if (routerZ < toZ) {\r\n            horizontalDirection = \"down\"\r\n        } else if (routerZ > toZ) {\r\n            horizontalDirection = \"up\"\r\n        }\r\n        const linesToDraw: EdgeLine[] = []\r\n\r\n        const moveStep = 0.1\r\n\r\n        //@ts-ignore\r\n        const toSize = new Vector3()\r\n        to.userData.boundingBox.getSize(toSize)\r\n        const line2Size = Math.abs(routerZ - toZ) - toSize.x / 2\r\n        switch (verticalDirection) {\r\n            case \"right\":\r\n                if (routerX === toX) linesToDraw.push(rightLine())\r\n                const length = to.position.x - router.position.x - routerSize.x / 2\r\n                const lineDataRight = rightLine(length)\r\n                lineDataRight.x += routerSize.x\r\n\r\n                const lineDataUp = upLine(line2Size)\r\n                lineDataUp.x = lineDataRight.x + lineDataRight.size / 2\r\n                lineDataUp.z = lineDataRight.z - line2Size / 2\r\n\r\n                linesToDraw.push(lineDataRight)\r\n                linesToDraw.push(lineDataUp)\r\n\r\n                break\r\n\r\n            case \"left\":\r\n                if (routerX === toX) linesToDraw.push(leftLine())\r\n                const lineDataLeft = leftLine(Math.abs(router.position.x - to.position.x - routerSize.x / 2))\r\n\r\n                const lineDataUp2 = upLine(line2Size)\r\n                ;(lineDataUp2.x = to.position.x + connectionsCount * moveStep),\r\n                    (lineDataUp2.z = lineDataLeft.z - line2Size / 2)\r\n\r\n                lineDataLeft.x += connectionsCount * moveStep\r\n                linesToDraw.push(lineDataLeft)\r\n                linesToDraw.push(lineDataUp2)\r\n\r\n                break\r\n\r\n            default:\r\n                break\r\n        }\r\n\r\n        const lines = this.createLine(linesToDraw)\r\n        this.connections.push({ from: router, to, lines })\r\n    }\r\n\r\n    createLine(lines: EdgeLine[]): any {\r\n        let linesMeshes: any = []\r\n        lines.forEach((line) => {\r\n            let width = 0.1\r\n            let depth = 0.1\r\n            const y = line.y ?? 0\r\n            // @ts-ignore\r\n            if ([\"right\", \"left\"].includes(line.direction)) {\r\n                width = line.size\r\n                // @ts-ignore\r\n            } else if ([\"up\", \"down\"].includes(line.direction)) {\r\n                depth = line.size\r\n            }\r\n            const lineMaterial = new MeshStandardMaterial({\r\n                color: line.color || \"#0c0c80\",\r\n                visible: !line.animation,\r\n                metalness: 0,\r\n            })\r\n\r\n            const geometry = new BoxGeometry(width, 0.1, depth, 1, 1, 1)\r\n\r\n            const mesh = new Mesh(geometry, lineMaterial)\r\n            mesh.position.set(line.x, y, line.z)\r\n            if (line.name) mesh.name = line.name\r\n            linesMeshes.push({ mesh, data: line })\r\n        })\r\n        this.#scene.add(...linesMeshes.map((el: any) => el.mesh))\r\n\r\n        return linesMeshes\r\n    }\r\n\r\n    findConnections(name: string) {}\r\n\r\n    // attackOld(from: Object3D<Event>, to: Object3D<Event>): void {\r\n    //     let animationsCount = 0\r\n    //     const animations: any = []\r\n    //     while (animationsCount < 8) {\r\n    //         const connectionsFrom = this.connections.filter((el: any) => {\r\n    //             if (from.userData?.isRouter) return el.from.name === from.name\r\n    //             return el.to.name === from.name\r\n    //         })\r\n    //         const connection = connectionsFrom[0]\r\n    //         const isReverse = !from.userData?.isRouter\r\n    //         const lines = this.creaeteAttackLines(connection, isReverse)\r\n\r\n    //         const directions: any = {\r\n    //             left: \"x\",\r\n    //             right: \"x\",\r\n    //             up: \"z\",\r\n    //             down: \"z\",\r\n    //         }\r\n\r\n    //         lines.forEach((line: any, index: number) => {\r\n    //             const direction = directions[line.data.direction]\r\n    //             line.mesh.scale[direction] = 0\r\n    //             line.mesh.position[direction] -= line.data.size / 2\r\n\r\n    //             const animationName = `attack_${index}_${animationsCount}`\r\n    //             animationsCount++\r\n    //             const target = from.userData?.isRouter\r\n    //                 ? connection.to.getObjectByName(\"mainMesh\")\r\n    //                 : connection.from.getObjectByName(\"mainMesh\")\r\n    //             animations.push({\r\n    //                 line,\r\n    //                 target,\r\n    //                 direction,\r\n    //                 name: animationName,\r\n    //             })\r\n    //         })\r\n    //         from = connection.from\r\n    //     }\r\n\r\n    //     let animationSteps = 0\r\n    //     animations.forEach((anim: any, index: number) => {\r\n    //         const { line, name, direction, target } = anim\r\n    //         this.elementsForAnimated[name] = () => {\r\n    //             if (animationSteps !== index) return\r\n    //             const mesh = line.mesh\r\n    //             if (!mesh.material.visible) mesh.material.visible = true\r\n\r\n    //             if (mesh.scale[direction] < 1) {\r\n    //                 mesh.scale[direction] += 0.01\r\n    //                 mesh.position[direction] += line.data.size / 200\r\n    //             } else {\r\n    //                 animationSteps++\r\n    //                 delete this.elementsForAnimated[name]\r\n\r\n    //                 if (animationSteps % 2 === 0) {\r\n    //                     target.material.color = new Color(\"red\")\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    createRouter(id: string, x: number, z: number, model: any): Group {\r\n        const router = new Router(id, x, z, model)\r\n        this.#scene.add(router.instance)\r\n        this.#routers.push(router)\r\n        return router.instance\r\n    }\r\n\r\n    initPostProcessing(): void {\r\n        this.composer = new EffectComposer(this.#renderer)\r\n        this.composer.setSize(this.rendererSize.width, this.rendererSize.height)\r\n\r\n        const renderPass = new RenderPass(this.#scene, this.#camera)\r\n        this.composer.addPass(renderPass)\r\n\r\n        this.outlinePass = new OutlinePass(\r\n            new Vector2(window.innerWidth, window.innerHeight),\r\n            this.#scene,\r\n            this.#camera\r\n        )\r\n        this.outlinePass.visibleEdgeColor.set(\"#ff0000\")\r\n        this.outlinePass.edgeThickness = 1\r\n        this.outlinePass.edgeStrength = 2\r\n        this.outlinePass.overlayMaterial.blending = CustomBlending\r\n        this.composer.addPass(this.outlinePass)\r\n\r\n        // const effectFXAA = new ShaderPass(FXAAShader)\r\n        // effectFXAA.uniforms.resolution.value.set(1 / window.innerWidth, 1 / window.innerHeight)\r\n        // this.composer.addPass(effectFXAA)\r\n\r\n        const gammaCorrectionPass = new ShaderPass(GammaCorrectionShader)\r\n        this.composer.addPass(gammaCorrectionPass)\r\n    }\r\n\r\n    onPointerMove(event: PointerEvent): void {\r\n        if (event.isPrimary === false) return\r\n        this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1\r\n        this.mouse.y = -(event.clientY / window.innerHeight) * 2 + 1\r\n\r\n        this.checkIntersection()\r\n    }\r\n\r\n    onPointerDown(event: PointerEvent): void {\r\n        const el = this.selectedObjects\r\n        //@ts-ignore\r\n        const parent = el.userData.parent\r\n        //@ts-ignore\r\n        if (el.userData.isHost || parent) {\r\n            this.activeModal?.toggleLabel()\r\n\r\n            //@ts-ignore\r\n            if (el.userData.isHost) this.activeModal = el.userData.host\r\n            if (parent) this.activeModal = parent.userData.host\r\n\r\n            this.activeModal.toggleLabel()\r\n        }\r\n    }\r\n\r\n    checkIntersection(): void {\r\n        this.raycaster.setFromCamera(this.mouse, this.#camera)\r\n        const intersects = this.raycaster.intersectObject(this.#scene, true)\r\n\r\n        if (intersects.length == 0) return\r\n\r\n        // @ts-ignore\r\n        this.selectedObjects = intersects[0].object\r\n\r\n        if (!this.outlinePass) return\r\n        // @ts-ignore\r\n        const parent = this.selectedObjects.userData.parent\r\n        // @ts-ignore\r\n        if (this.selectedObjects.userData.isHost) {\r\n            // @ts-ignore\r\n            this.outlinePass.selectedObjects = [this.selectedObjects]\r\n        }\r\n        if (parent?.userData.isHost) {\r\n            // @ts-ignore\r\n            this.outlinePass.selectedObjects = [this.selectedObjects.parent]\r\n        }\r\n    }\r\n\r\n    createSegment(text: string, model?: any): Segment {\r\n        const startX = -9\r\n        const startZ = -3\r\n        const stepX = 6\r\n        const x = startX + stepX * (this.#segments.length || 0)\r\n\r\n        const segment = new Segment(text, x, startZ, this)\r\n        this.#segments.push(segment)\r\n        this.#scene.add(segment.instance)\r\n        return segment\r\n    }\r\n\r\n    createHostsConnection(id: string, length: number): void {\r\n        const hostConnectionMaterial = new MeshBasicMaterial({\r\n            color: 0xff0000,\r\n            name: \"hostsConnection\",\r\n        })\r\n        // TODO: Написать автоматическое вычисление длины между двумя хостами, и передавать в функцию два хоста, между которыми надо сделать соединение\r\n        const hostConnection = new BoxGeometry(length, 0.5, 0.1)\r\n        const hostConnectionMesh = new Mesh(hostConnection, hostConnectionMaterial)\r\n        hostConnectionMesh.position.set(0.5, 1, -0.45)\r\n\r\n        // Создаем шар для анимации активного соединения\r\n        const sphereGeometry = new SphereGeometry(0.1, 64, 32)\r\n        const sphereMaterial = new MeshBasicMaterial({\r\n            color: 0xffff00,\r\n            name: \"sphere\",\r\n        })\r\n        const sphere = new Mesh(sphereGeometry, sphereMaterial)\r\n        sphere.position.set(0.2, 1.5, -0.1)\r\n\r\n        const connectionGroup = new Group()\r\n        connectionGroup.add(hostConnectionMesh)\r\n        connectionGroup.add(sphere)\r\n\r\n        this.#hostsConnections.push({\r\n            id: id,\r\n            connection: hostConnectionMesh,\r\n            sphere: sphere,\r\n        })\r\n\r\n        this.#scene.add(connectionGroup)\r\n    }\r\n\r\n    createCamera(): OrthographicCamera {\r\n        const aspect = window.innerWidth / window.innerHeight\r\n        const d = 10\r\n\r\n        const camera = new OrthographicCamera(-d * aspect, d * aspect, d, -d, 1, 1000)\r\n        camera.position.set(20, 20, 20)\r\n        camera.rotation.order = \"YXZ\"\r\n        camera.rotation.y = -Math.PI / 4\r\n        camera.rotation.x = Math.atan(-1 / Math.sqrt(2))\r\n        return camera\r\n    }\r\n\r\n    createWebGLRenderer(width: number, height: number, canvas: HTMLCanvasElement | OffscreenCanvas): WebGLRenderer {\r\n        const renderer = new WebGLRenderer({\r\n            canvas: canvas,\r\n            antialias: true,\r\n        })\r\n        renderer.setPixelRatio(window.devicePixelRatio)\r\n        renderer.setClearColor(0xffffff)\r\n        renderer.outputEncoding = sRGBEncoding\r\n        renderer.shadowMap.enabled = true\r\n        renderer.shadowMap.type = PCFSoftShadowMap\r\n        // renderer.toneMapping = Uncharted2ToneMapping\r\n        renderer.setSize(width, height)\r\n        return renderer\r\n    }\r\n\r\n    createLight(x: number, y: number, z: number): any {\r\n        const light = new AmbientLight(0xffffff, 1)\r\n        const light3 = new DirectionalLight(new Color(\"white\"), 1)\r\n        const light4 = new DirectionalLight(new Color(\"white\"), 1)\r\n        const helper3 = new DirectionalLightHelper(light3, 5, new Color(\"red\"))\r\n        const light5 = new DirectionalLight(new Color(\"white\"), 1)\r\n        const helper4 = new DirectionalLightHelper(light5, 5, new Color(\"green\"))\r\n        light3.position.set(0, 10, 30)\r\n        light3.rotation.set(-80.5, 0, 0)\r\n\r\n        light4.position.set(5, 10, 30)\r\n        light4.rotation.set(-80.5, 0, 0)\r\n\r\n        light5.position.set(5, 10, -30)\r\n        light5.rotation.set(80.5, 0, 0)\r\n        this.#scene.add(\r\n            light3,\r\n            // helper3,\r\n            light4,\r\n            // helper4,\r\n            light5\r\n        )\r\n        this.#camera.add(light)\r\n        return light3\r\n    }\r\n\r\n    createFloor(): void {\r\n        const floorMaterial = new MeshStandardMaterial({\r\n            name: \"floor\",\r\n            // color: 0xbcbcbc,\r\n            color: new Color(\"#434343\"),\r\n            metalness: 0,\r\n        })\r\n        const floor = new Mesh(new BoxGeometry(this.#floorSize.x, this.#floorSize.y, this.#floorSize.z), floorMaterial)\r\n        floor.position.set(0, -this.#floorSize.y / 2, 0)\r\n        this.#scene.add(floor)\r\n    }\r\n\r\n    render(): void {\r\n        // if (this.#hostsConnections.length > 0) {\r\n        //     this.#hostsConnections.forEach((connection) => {\r\n        //         console.log(connection)\r\n        //     })\r\n        // }\r\n\r\n        for (let event in this.#elementsForAnimated) {\r\n            this.#elementsForAnimated[event]()\r\n        }\r\n\r\n        this.#segments.forEach((segment: any) => {\r\n            segment.hosts.forEach((host: any) => {\r\n                const tempV = new Vector3()\r\n                const instance = host.instance\r\n                instance.updateWorldMatrix(true, false)\r\n                instance.getWorldPosition(tempV)\r\n                tempV.project(this.#camera)\r\n                const x = (tempV.x * 0.5 + 0.5) * this.canvas.clientWidth\r\n                const y = (tempV.y * -0.5 + 0.5) * this.canvas.clientHeight\r\n                instance.userData.label.style.transform = `translate(-50%, -50%) translate(${x + 40}px,${y - 70}px)`\r\n            })\r\n        })\r\n\r\n        // this.#renderer.render(this.#scene, this.#camera)\r\n        this.composer?.render()\r\n        requestAnimationFrame(() => this.render())\r\n    }\r\n\r\n    get scene(): Scene {\r\n        return this.#scene\r\n    }\r\n\r\n    get camera(): OrthographicCamera {\r\n        return this.#camera\r\n    }\r\n\r\n    get renderer(): WebGLRenderer {\r\n        return this.#renderer\r\n    }\r\n\r\n    get light(): DirectionalLight {\r\n        return this.#light\r\n    }\r\n\r\n    get elementsForAnimated(): ElementsForAnimated {\r\n        return this.#elementsForAnimated\r\n    }\r\n\r\n    get segments(): Segment[] {\r\n        return this.#segments\r\n    }\r\n\r\n    async attack(nameFrom: string, nameTo: string, reverse: boolean = false, verticalDirection: \"down\" | \"up\" = \"up\") {\r\n        const connection = this.connections.find((el: any) => {\r\n            if (reverse) {\r\n                return el.to.name === nameTo && el.from.name === nameFrom\r\n            } else {\r\n                return el.from.name === nameTo && el.to.name === nameFrom\r\n            }\r\n        })\r\n\r\n        let animationCount = 0\r\n        const myLines = [...connection?.lines]\r\n        const lines = !reverse ? myLines.reverse() : myLines\r\n        for (const line of lines) {\r\n            animationCount++\r\n            const from = this.#scene.getObjectByName(nameFrom)\r\n            const to = this.#scene.getObjectByName(nameTo)\r\n            const animationName = `test_${animationCount}`\r\n\r\n            await this.createAttackAnimation(animationName, from, to, line.data, verticalDirection)\r\n        }\r\n    }\r\n\r\n    createAttackAnimation(\r\n        animationName: string,\r\n        from: any,\r\n        to: any,\r\n        data: any,\r\n        verticalDirection: \"down\" | \"up\" = \"up\"\r\n    ) {\r\n        return new Promise((res, rej) => {\r\n            const lines = this.createLine([{ ...data, y: 0.05 }])\r\n            const line = lines[0]\r\n            const mesh = line.mesh\r\n            const directionSign = verticalDirection == \"down\" ? 1 : -1\r\n            mesh.material.color = attackColor\r\n            this.attackLines.push(...lines)\r\n\r\n            if ([\"right\", \"left\"].includes(data.direction)) {\r\n                mesh.scale.set(0, 1, 1)\r\n                mesh.position.x = data.x - data.size / 2\r\n            } else {\r\n                mesh.scale.set(1, 1, 0)\r\n                mesh.position.z = data.z - (data.size / 2) * directionSign\r\n            }\r\n\r\n            this.#elementsForAnimated[animationName] = () => {\r\n                if (from.name == \"segmentGroup_Internet\") {\r\n                    from?.userData.materials?.forEach((el: any) => (el.color = attackColor))\r\n                }\r\n                if ([\"right\", \"left\"].includes(data.direction)) {\r\n                    // x\r\n\r\n                    if (mesh.scale.x < 1) {\r\n                        mesh.scale.x += 0.01\r\n                        mesh.position.x += data.size / 200\r\n                    } else {\r\n                        delete this.#elementsForAnimated[animationName]\r\n                        to?.userData.materials?.forEach((el: any) => (el.color = attackColor))\r\n                        res(\"\")\r\n                    }\r\n                } else {\r\n                    // z\r\n\r\n                    if (mesh.scale.z < 1) {\r\n                        mesh.scale.z += 0.01\r\n                        mesh.position.z += (data.size / 200) * directionSign\r\n                    } else {\r\n                        delete this.#elementsForAnimated[animationName]\r\n\r\n                        to?.userData.materials?.forEach((el: any) => (el.color = attackColor))\r\n                        res(\"\")\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    fromInternetToRouter() {\r\n        const nameFrom = \"segmentGroup_Internet\"\r\n        const nameTo = \"routerGroup_Router 1\"\r\n        return this.attack(nameFrom, nameTo, false, \"down\")\r\n    }\r\n\r\n    fromRouterToDMZ() {\r\n        const nameFrom = \"routerGroup_Router 1\"\r\n        const nameTo = \"segmentGroup_DMZ\"\r\n        return this.attack(nameFrom, nameTo, true)\r\n    }\r\n\r\n    fromDMZToRouter() {\r\n        const nameFrom = \"segmentGroup_DMZ\"\r\n        const nameTo = \"routerGroup_Router 2\"\r\n        return this.attack(nameFrom, nameTo, false, \"down\")\r\n    }\r\n\r\n    fromRouterToDataCenter() {\r\n        const nameFrom = \"routerGroup_Router 2\"\r\n        const nameTo = \"segmentGroup_Data Center\"\r\n        return this.attack(nameFrom, nameTo, true)\r\n    }\r\n\r\n    fromDataCenterToRouter() {\r\n        const nameFrom = \"segmentGroup_Data Center\"\r\n        const nameTo = \"routerGroup_Router 2\"\r\n        return this.attack(nameFrom, nameTo)\r\n    }\r\n\r\n    fromOfficeUserToRouter() {\r\n        const nameFrom = \"segmentGroup_Office users\"\r\n        const nameTo = \"routerGroup_Router 2\"\r\n        return this.attack(nameFrom, nameTo)\r\n    }\r\n\r\n    fromRouterToOfficeUsers() {\r\n        const nameFrom = \"routerGroup_Router 2\"\r\n        const nameTo = \"segmentGroup_Office users\"\r\n        return this.attack(nameFrom, nameTo, true)\r\n    }\r\n\r\n    fromRouterToASU() {\r\n        const nameFrom = \"routerGroup_Router 2\"\r\n        const nameTo = \"segmentGroup_ASU\"\r\n        return this.attack(nameFrom, nameTo, true)\r\n    }\r\n\r\n    resetAttack() {\r\n        this.#elementsForAnimated = {}\r\n\r\n        this.#segments.forEach((el: any) => {\r\n            el.instance.userData.materials.forEach((el: any) => (el.color = new Color(\"#080808\")))\r\n        })\r\n\r\n        this.#routers.forEach((el: any) => {\r\n            el.instance.userData.materials.forEach((el: any) => (el.color = new Color(\"#000000\")))\r\n        })\r\n\r\n        this.attackLines.forEach((el: any) => {\r\n            this.#scene.remove(el.mesh)\r\n        })\r\n        this.attackLines = []\r\n    }\r\n}\r\n\r\nclass ColorGUIHelper {\r\n    object\r\n    prop\r\n    // @ts-ignore\r\n    constructor(object, prop) {\r\n        this.object = object\r\n        this.prop = prop\r\n    }\r\n    get value() {\r\n        return `#${this.object[this.prop].getHexString()}`\r\n    }\r\n    set value(hexString) {\r\n        this.object[this.prop].set(hexString)\r\n    }\r\n}\r\n\r\n// @ts-ignore\r\nfunction makeXYZGUI(gui, vector3, name, onChangeFn) {\r\n    const folder = gui.addFolder(name)\r\n    folder.add(vector3, \"x\", -10, 10).onChange(onChangeFn)\r\n    folder.add(vector3, \"y\", 0, 10).onChange(onChangeFn)\r\n    folder.add(vector3, \"z\", -10, 10).onChange(onChangeFn)\r\n    folder.open()\r\n}\r\n","import { Component, Vue } from \"vue-property-decorator\"\r\n// @ts-ignore\r\nimport hostImage from \"../../features/InteractiveMap/textures/host.jpg\"\r\nconst textureLoader = new TextureLoader()\r\nimport { TextureLoader, Color, Vector3, BoxGeometry, MeshStandardMaterial, Mesh, Object3D, Event } from \"three\"\r\n// @ts-ignore\r\nimport { InteractiveMap, EdgeLine, Size } from \"../../features/InteractiveMap\"\r\n// @ts-ignore\r\nimport mapData from \"../../interactiveMap.json\"\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\"\r\nconst gltfLoad = new GLTFLoader()\r\n\r\n@Component\r\nexport default class TrainingInteractiveMap extends Vue {\r\n    isStarted: boolean = false\r\n    interactiveMap: InteractiveMap | undefined\r\n    attackSegmentLines: Mesh<BoxGeometry, MeshStandardMaterial>[] = []\r\n    attackHostLines: Mesh<BoxGeometry, MeshStandardMaterial>[] = []\r\n    segmentFrom: number = 0\r\n    segmentTo: number | undefined = 1\r\n    segments: string[] = [\"Internet\", \"DMZ\", \"Data Center\", \"Office users\", \"ASU\"]\r\n    models: any = {\r\n        Internet1: {\r\n            path: \"Internet/Internet1\",\r\n            model: undefined,\r\n        },\r\n        Internet2: {\r\n            path: \"Internet/Internet2\",\r\n            model: undefined,\r\n        },\r\n        DMZ: {\r\n            path: \"DMZ/DMZ\",\r\n            model: undefined,\r\n        },\r\n        DataCenter: {\r\n            path: \"DataCenter/DataCenter\",\r\n            model: undefined,\r\n        },\r\n        OfficeUsers: {\r\n            path: \"OfficeUsers/OfficeUsers\",\r\n            model: undefined,\r\n        },\r\n        ASU: {\r\n            path: \"ASU/ASU\",\r\n            model: undefined,\r\n        },\r\n        router: {\r\n            path: \"router/router\",\r\n            model: undefined,\r\n        },\r\n    }\r\n\r\n    swapSelects() {\r\n        const tempFrom = this.segmentFrom\r\n        // @ts-ignore\r\n        this.segmentFrom = this.segmentTo\r\n        this.segmentTo = tempFrom\r\n    }\r\n\r\n    getModelForHost(hostName: string) {\r\n        const modelNames: any = {\r\n            Internet: \"Internet2\",\r\n            DMZ: \"DMZ\",\r\n            // DMZ: \"ASU\",\r\n            \"Data Center\": \"DataCenter\",\r\n            \"Office users\": \"OfficeUsers\",\r\n            ASU: \"ASU\",\r\n        }\r\n\r\n        return modelNames[hostName]\r\n    }\r\n\r\n    mounted() {\r\n        this.isStarted = true\r\n        this.start(this.canvas)\r\n    }\r\n    async preloadModels() {\r\n        for (let name in this.models) {\r\n            const modelData = this.models[name]\r\n            // const material = await mtlLoad.loadAsync(`./models/${modelData.path}.mtl`)\r\n            const model = await gltfLoad.loadAsync(`./models/${modelData.path}.gltf`)\r\n            // const model = await gltfLoad.loadAsync(`./models/Internet/Internet1.gltf`)\r\n            model.scene.scale.set(1.5, 1.5, 1.5)\r\n            this.models[name].model = model.scene\r\n        }\r\n    }\r\n\r\n    async start(canvas: HTMLCanvasElement): Promise<InteractiveMap> {\r\n        const rendererSizes: Size = {\r\n            width: window.innerWidth - 20,\r\n            height: window.innerHeight - 20,\r\n        }\r\n        const lightPositions: Vector3 = new Vector3(10, 10, -4)\r\n        const IM = new InteractiveMap(rendererSizes, lightPositions, canvas)\r\n        await this.preloadModels()\r\n        this.interactiveMap = IM\r\n\r\n        const segments = []\r\n        const routers = []\r\n\r\n        mapData.segments.forEach((segment: any) => {\r\n            const newSegment = IM.createSegment(segment.name)\r\n            segments.push(newSegment)\r\n            segment.hosts?.forEach((host: any) => {\r\n                const modelName = this.getModelForHost(segment.name)\r\n                const objectModel = this.models[modelName].model\r\n                newSegment.createHost(host.name, host.ip, objectModel)\r\n            })\r\n        })\r\n        mapData.routers.forEach((router: any) => {\r\n            if (!router.segments) return\r\n            const segmentFrom = IM.scene.getObjectByName(`segmentGroup_${router.segments.from}`)\r\n\r\n            const fromX = segmentFrom?.position.x || 0\r\n            const fromZ = segmentFrom?.position.z || 0\r\n\r\n            const stepX = 3\r\n            const stepZ = 5\r\n            const x = fromX + stepX\r\n            const z = fromZ + stepZ\r\n            const newRouter = IM.createRouter(router.name, x, z, this.models.router.model)\r\n            routers.push(newRouter)\r\n\r\n            router.segments.to.forEach((segment: any) => {\r\n                const segmentTo = IM.scene.getObjectByName(`segmentGroup_${segment}`)\r\n                // @ts-ignore\r\n                IM.connectRouterTo(newRouter, segmentTo)\r\n            })\r\n\r\n            // @ts-ignore\r\n            IM.connectRouterTo(newRouter, segmentFrom)\r\n        })\r\n\r\n        return IM\r\n    }\r\n\r\n    startAttackSegment(): void {\r\n        if (!this.interactiveMap || this.segmentTo === undefined || this.segmentFrom === undefined) return\r\n\r\n        this.resetAttack()\r\n        // @ts-ignore\r\n        switch (this.segments[this.segmentFrom]) {\r\n            case \"Internet\":\r\n                switch (this.segments[this.segmentTo]) {\r\n                    case \"DMZ\":\r\n                        this.interactiveMap.fromInternetToRouter().then(() => this.interactiveMap?.fromRouterToDMZ())\r\n                        break\r\n                    case \"Data Center\":\r\n                        this.interactiveMap\r\n                            .fromInternetToRouter()\r\n                            .then(() => this.interactiveMap?.fromRouterToDMZ())\r\n                            .then(() => this.interactiveMap?.fromDMZToRouter())\r\n                            .then(() => this.interactiveMap?.fromRouterToDataCenter())\r\n                        break\r\n                    case \"Office users\":\r\n                        this.interactiveMap\r\n                            ?.fromInternetToRouter()\r\n                            .then(() => this.interactiveMap?.fromRouterToDMZ())\r\n                            .then(() => this.interactiveMap?.fromDMZToRouter())\r\n                            .then(() => this.interactiveMap?.fromRouterToOfficeUsers())\r\n                        break\r\n                    case \"ASU\":\r\n                        this.interactiveMap\r\n                            ?.fromInternetToRouter()\r\n                            .then(() => this.interactiveMap?.fromRouterToDMZ())\r\n                            .then(() => this.interactiveMap?.fromDMZToRouter())\r\n                            .then(() => this.interactiveMap?.fromRouterToASU())\r\n                        break\r\n                }\r\n                break\r\n            case \"DMZ\":\r\n                switch (this.segments[this.segmentTo]) {\r\n                    case \"Data Center\":\r\n                        this.interactiveMap?.fromDMZToRouter().then(() => this.interactiveMap?.fromRouterToDataCenter())\r\n                        break\r\n                    case \"Office users\":\r\n                        this.interactiveMap\r\n                            ?.fromDMZToRouter()\r\n                            .then(() => this.interactiveMap?.fromDMZToRouter())\r\n                            .then(() => this.interactiveMap?.fromRouterToOfficeUsers())\r\n                        break\r\n                    case \"ASU\":\r\n                        this.interactiveMap\r\n                            ?.fromDMZToRouter()\r\n                            .then(() => this.interactiveMap?.fromDMZToRouter())\r\n                            .then(() => this.interactiveMap?.fromRouterToASU())\r\n                        break\r\n                }\r\n                break\r\n            case \"Data Center\":\r\n                switch (this.segments[this.segmentTo]) {\r\n                    case \"Office users\":\r\n                        this.interactiveMap\r\n                            .fromDataCenterToRouter()\r\n                            .then(() => this.interactiveMap?.fromRouterToOfficeUsers())\r\n                        break\r\n                    case \"ASU\":\r\n                        this.interactiveMap.fromDataCenterToRouter().then(() => this.interactiveMap?.fromRouterToASU())\r\n                        break\r\n                }\r\n                break\r\n            case \"Office users\":\r\n                switch (this.segments[this.segmentTo]) {\r\n                    case \"ASU\":\r\n                        this.interactiveMap?.fromOfficeUserToRouter().then(() => this.interactiveMap?.fromRouterToASU())\r\n                        break\r\n                }\r\n                break\r\n        }\r\n    }\r\n\r\n    startAttackHost(): void {\r\n        this.resetAttack()\r\n        // @ts-ignore\r\n        const host = this.interactiveMap.scene.getObjectByName(\"hostGroup_Administrator Workstation\")\r\n        // @ts-ignore\r\n        // host?.children[0].material.color.set(new Color(\"transparent\"))\r\n        // host?.children[0].material.color = new Color(\"transparent\")\r\n        // host?.children.forEach((m: any) => {\r\n        //     // m.material.color.r = 0\r\n        //     // m.material.color.g = 0\r\n        //     // m.material.color.b = 0\r\n        //     m.material.color = new Color(\"transparent\")\r\n        // })\r\n        // @ts-ignore\r\n        // host.material.color = new Color(\"transparent\")\r\n        this.interactiveMap\r\n            ?.fromInternetToRouter()\r\n            .then(() => this.interactiveMap?.fromRouterToDMZ())\r\n            .then(() => this.interactiveMap?.fromDMZToRouter())\r\n            .then(() => this.interactiveMap?.fromRouterToOfficeUsers())\r\n            .then(() => {\r\n                // @ts-ignore\r\n                // host!.children[0].material.color.r = 0\r\n                // host!.children[0].material.color.g = 0\r\n                // host!.children[0].material.color.b = 0\r\n                // .set(new Color(\"green\"))\r\n                console.log(host)\r\n                host?.userData.materials.forEach((el: any) => (el.color = new Color(\"red\")))\r\n                // host!.children[0].material.color = new Color(\"red\")\r\n            })\r\n    }\r\n\r\n    resetAttack() {\r\n        this.interactiveMap?.resetAttack()\r\n    }\r\n\r\n    addAttackAnimation(\r\n        animationName: string,\r\n        linesData: EdgeLine[],\r\n        attackLines: Mesh<BoxGeometry, MeshStandardMaterial>[],\r\n        target: Object3D<Event>\r\n    ) {\r\n        if (!this.interactiveMap) return\r\n\r\n        let animateStep = 0\r\n        this.interactiveMap.elementsForAnimated[animationName] = () => {\r\n            if (animateStep >= attackLines.length) {\r\n                delete this.interactiveMap?.elementsForAnimated[animationName]\r\n                // @ts-ignore\r\n                target.material.color = new Color(\"red\")\r\n                return\r\n            }\r\n            const lineData = linesData[animateStep]?.animation\r\n            if (!lineData) return\r\n\r\n            const line: any = attackLines[animateStep]\r\n            if (!line) return\r\n\r\n            if (!line.material.visible) line.material.visible = true\r\n\r\n            const curScale = line.scale[lineData.direction]\r\n            if (curScale < lineData.toScale) {\r\n                line.scale[lineData.direction] += 0.1\r\n            }\r\n\r\n            const curPosition = line.position[lineData.direction]\r\n\r\n            if (lineData.method == \"+\" && curPosition < lineData.toPosition) {\r\n                line.position[lineData.direction] += 0.05\r\n            } else if (lineData.method == \"-\" && curPosition > lineData.toPosition) {\r\n                line.position[lineData.direction] -= 0.05\r\n            } else {\r\n                animateStep++\r\n            }\r\n        }\r\n    }\r\n\r\n    isDisabled(segmentIndex: number): boolean {\r\n        return segmentIndex <= this.segmentFrom\r\n    }\r\n\r\n    checkSegmentTo() {\r\n        if (this.segmentTo === undefined) return\r\n        if (this.segmentTo <= this.segmentFrom) this.segmentTo = undefined\r\n    }\r\n\r\n    get canvas(): HTMLCanvasElement {\r\n        return this.$refs.canvas as HTMLCanvasElement\r\n    }\r\n}\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/ts-loader/index.js??ref--14-3!./script.ts?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/ts-loader/index.js??ref--14-3!./script.ts?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=8a834cce&\"\nimport script from \"./script.ts?vue&type=script&lang=js&\"\nexport * from \"./script.ts?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\nimport { Component, Vue } from \"vue-property-decorator\"\nimport TrainingInteractiveMap from \"./components/TrainingInteractiveMap/index.vue\"\n\n@Component({\n    // // @ts-ignore\n    components: {\n        TrainingInteractiveMap,\n    },\n})\nexport default class App extends Vue {}\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--14-3!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--14-3!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=60b9b32e&scoped=true&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"60b9b32e\",\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\nimport \"./styles.css\"\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n"],"sourceRoot":""}